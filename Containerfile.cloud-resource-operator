# based on cro dockerfile
FROM registry.redhat.io/ubi9/go-toolset:1.20.12 AS builder

USER root

COPY drift-detection/detector.sh /detector.sh
# Check to see if we need to react to any uptream changes
COPY drift-cache /drift-cache

WORKDIR /tmp

COPY cloud-resource-operator/Dockerfile .
RUN /detector.sh ./Dockerfile /drift-cache/cloud-resource-operator/Dockerfile

WORKDIR /workspace

# Copy the Go Modules manifests	
COPY cloud-resource-operator/go.mod go.mod	
COPY cloud-resource-operator/go.sum go.sum

# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer	
# RUN go mod download

# Copy the go source	
COPY cloud-resource-operator/main.go main.go	
COPY cloud-resource-operator/apis/ apis/
COPY cloud-resource-operator/vendor/ vendor/			
COPY cloud-resource-operator/controllers/ controllers/	
COPY cloud-resource-operator/pkg/ pkg/
COPY cloud-resource-operator/internal/ internal/	
COPY cloud-resource-operator/version/ version/		
COPY cloud-resource-operator/test/ test/
COPY cloud-resource-operator/LICENSE licenses/

# Build	
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o cloud-resource-operator main.go

FROM registry.access.redhat.com/ubi9/ubi-minimal:latest

ENV OPERATOR=/usr/local/bin/cloud-resource-operator \
USER_UID=1001 \
USER_NAME=cloud-resource-operator

COPY --from=builder /workspace/cloud-resource-operator /usr/local/bin/cloud-resource-operator

COPY cloud-resource-operator/build/bin /usr/local/bin
COPY --from=builder /workspace/licenses /licenses

RUN  /usr/local/bin/user_setup

ENTRYPOINT ["/usr/local/bin/entrypoint"]

USER ${USER_UID}