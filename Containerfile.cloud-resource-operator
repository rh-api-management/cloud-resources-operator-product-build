# based on cro dockerfile
FROM registry.access.redhat.com/ubi9/go-toolset:1.23 AS builder

USER root

COPY drift-detection/detector.sh /detector.sh
# Check to see if we need to react to any uptream changes
COPY drift-cache /drift-cache

WORKDIR /tmp

COPY cloud-resource-operator/Dockerfile .
RUN /detector.sh ./Dockerfile /drift-cache/cloud-resource-operator/Dockerfile

WORKDIR /workspace

# Copy the Go Modules manifests	
COPY cloud-resource-operator/go.mod go.mod	
COPY cloud-resource-operator/go.sum go.sum

# Copy the go source	
COPY cloud-resource-operator/cmd/ cmd/	
COPY cloud-resource-operator/api/ api/
COPY cloud-resource-operator/vendor/ vendor/				
COPY cloud-resource-operator/pkg/ pkg/
COPY cloud-resource-operator/internal/ internal/	
COPY cloud-resource-operator/version/ version/		
COPY cloud-resource-operator/test/ test/
COPY cloud-resource-operator/LICENSE licenses/

# Build	
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -tags netgo -ldflags="-w -s -extldflags '-static'" -o cloud-resource-operator ./cmd/main.go

FROM registry.access.redhat.com/ubi9/ubi-minimal:latest

ENV OPERATOR=/usr/local/bin/cloud-resource-operator \
USER_UID=1001 \
USER_NAME=cloud-resource-operator

COPY --from=builder /workspace/cloud-resource-operator /usr/local/bin/cloud-resource-operator

COPY cloud-resource-operator/build/bin /usr/local/bin
COPY --from=builder /workspace/licenses /licenses

LABEL name="Cloud Resource Operator" \
      summary="Cloud Resource Operator container image" \
      description="Provision and manage in-cluster and cloud provider resources (Blob Storage, Postgres, Redis, SMTP Details)" \
      com.redhat.component="cloud-resource-operator-container" \
      version="alpha" \
      vendor="Red Hat, Inc."

LABEL io.k8s.display-name="Cloud Resource Operator" \
      io.openshift.expose-services="" \
      io.openshift.tags="cloud-resource-operator" \
      io.k8s.description="Provision and manage in-cluster and cloud provider resources (Blob Storage, Postgres, Redis, SMTP Details)"

RUN  /usr/local/bin/user_setup

ENTRYPOINT ["/usr/local/bin/entrypoint"]

USER ${USER_UID}